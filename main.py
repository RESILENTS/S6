from  config import *
from  keyboard import *

@bot.message_handler(commands=['start'])
def start(message):
    chat_id = message.from_user.id
    username = message.from_user.username
    with sqlite3.connect('users.db') as conn:
        cur = conn.cursor()
        cur.execute("""CREATE TABLE IF NOT EXISTS user(username TEXT, user_id INTEGER);""")
        cur.execute("SELECT * FROM user WHERE `user_id` = '{}'".format(chat_id))
        row = cur.fetchall()
        if len(row) == 0:
            cur.execute("INSERT INTO `user` (`username`, `user_id`) VALUES(?,?)",
                        (username, chat_id,))
    text = '<b>SORGENY</b> ‚Äî –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –ø–æ–ª—É—á–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ –∫—É—Ä—Å—ã, –º–∞–Ω—É–∞–ª—ã, –∏–Ω—Ñ–æ–ø—Ä–æ–¥—É–∫—Ç—ã —Å —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä—É–º–∞—Ö. \n\n–£ –º–µ–Ω—è –µ—Å—Ç—å –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–ª–∏—Ç—ã—Ö —Ö–∞–π–¥–æ–≤ —Å —Ä–∞–∑–Ω—ã—Ö –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –ø–ª–æ—â–∞–¥–æ–∫. –ë–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ –±–æ—Ç–µ –≤—ã —Å–º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –≤ —Ä–∞–∑–¥–µ–ª–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è.'
    img = open ('welc.webp', 'rb')
    bot.send_photo(chat_id, img, caption=text, reply_markup=main_keyboard(), parse_mode='html')

@bot.message_handler(commands=['admin'])
def admin(message):
    chat_id = message.from_user.id
    if chat_id in admins:
        bot.send_message(chat_id, 'üõ†Ô∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å.', reply_markup=admin_keyboard())


@bot.message_handler(content_types=['text'])
def text(message):
    chat_id = message.from_user.id
    if message.text == 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞':
        with sqlite3.connect('users.db') as conn:
            cur = conn.cursor()
            cur.execute("SELECT * FROM user")
            row = cur.fetchall()
            conn = sqlite3.connect('db.db')
            cursor = conn.cursor()
            cursor.execute("select count(*) from links") 
            result2 = cursor.fetchone()[0]
            bot.send_message(message.chat.id, f'''üìä  <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞ SORGENY:</b>

 ‚Äî  <b>–°–ª–∏–≤–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:</b> {result2}
 ‚Äî  <b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</b> ''' + str(len(row)), parse_mode='HTML')

    if message.text == "üì• –ü–æ–ª—É—á–∏—Ç—å —Ö–∞–π–¥":
        global link_idm
        conn = sqlite3.connect('db.db')
        cursor = conn.cursor()
        cursor.execute("select count(*) from links") 
        result2 = cursor.fetchone()[0]
        link_idm = message.text
        msg = bot.send_message(message.chat.id, f'''üîç  <b>–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.</b>

‚ö†Ô∏è  <b>–í–ù–ò–ú–ê–ù–ò–ï!</b> –ï—Å–ª–∏ –≤—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ —Å—Å—ã–ª–∫—É —Å –Ω–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–º –¥–æ–º–µ–Ω–æ–º —Ç–æ <b>–ë–û–¢</b> –Ω–µ —Å–º–æ–∂–µ—Ç –Ω–∞–π—Ç–∏ –∑–∞–ø–∏—Å—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
        
üü¢  <b>–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–æ–º–µ–Ω—ã:</b>
 ‚Äî slivup.cc
 
üìä  <b>–°–ª–∏–≤–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:</b> {result2}''', parse_mode='HTML')
        bot.register_next_step_handler(msg, getlinkm)
    elif message.text == '–†–∞—Å—Å—ã–ª–∫–∞' and chat_id in admins:
        message = bot.send_message(chat_id, 'üíÅüèª‚Äç‚ôÄÔ∏è –í–≤–µ–¥–∏—Ç–µ *—Å–æ–æ–±—â–µ–Ω–∏–µ* –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏', parse_mode="Markdown")
        bot.register_next_step_handler(message, add_message)

    elif message.text == '–î–æ–±–∞–≤–∏—Ç—å –≤ –ë–î' and chat_id in admins:
        msg = bot.send_message(chat_id, '‚ûï –í–≤–µ–¥–∏—Ç–µ –≥–ª–∞–≤–Ω—É—é —Å—Å—ã–ª–∫—É.\n\n –í–Ω–∏–º–∞–Ω–∏–µ! –ü–æ —ç—Ç–æ–π —Å—Å—ã–ª–∫–µ –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –ø–æ–∏—Å–∫ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.',parse_mode='HTML')
        bot.register_next_step_handler(msg, add1)

    elif message.text == 'üë• –ü–æ–¥–¥–µ—Ä–∂–∫–∞':
        bot.send_message(message.chat.id, 'üì© –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤—Å–µ –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ —Å–ª–∏–≤ –ø—Ä–∏–Ω–∏–º–∞–µ–º –≤ —Ä—É—á–Ω—É—é.\n\n–û—Ç–ø—Ä–∞–≤—Ç–µ —Å–≤–æ–∏ —Å—Å—ã–ª–∫–∏ –≤ –õ–° –ø–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º –Ω–∏–∂–µ:\nüë• @sorgeny_support',parse_mode='HTML')

    elif message.text == '–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π' and chat_id in admins:
        with sqlite3.connect('users.db') as conn:
            cur = conn.cursor()
            cur.execute("SELECT * from `user`")
            row = cur.fetchall()
            w_file = open("users.csv", mode="w", encoding='utf-8')
            file_writer = csv.writer(w_file, delimiter=",", lineterminator="\r")
            for rows in row:
                file_writer.writerow(rows)
            w_file.close()
            with open(curdir + "/users.csv", "r") as file:
                bot.send_document(chat_id, file)
                
def getlinkm(message):
        global link_coment, link_text, sql, link_id, get_link_new, link_global
        conn = sqlite3.connect('db.db')
        cursor = conn.cursor()
        link_coment = ""
        link_text = ""
        link_id = message.text
        link_global = link_id
        sql = "SELECT * FROM links WHERE link_id =?"
        result = cursor.fetchall()
        for row in cursor.execute(sql, ([link_id])):
            link_id = list(row)[0]
            link_coment = list(row)[1]
            link_text = list(row)[2]
        if  not link_text: 
            keyboard = types.InlineKeyboardMarkup()
            btn1 = types.InlineKeyboardButton(text="‚ûï –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–ª–∏–≤", callback_data="new_link")
            keyboard.add(btn1)
            bot.send_message(message.chat.id, f'''‚ùå <b>–û–®–ò–ë–ö–ê:</b> –ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É <b>"{link_id}"</b> –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.
	    
–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Å–ª–∏–≤ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞.''', reply_markup=keyboard, parse_mode='HTML')
        else:
            keyboard = types.InlineKeyboardMarkup()
            btn1 = types.InlineKeyboardButton(text="‚ùå –£–¥–∞–ª–∏—Ç—å –∑–∞–ø—Ä–æ—Å", callback_data="get_close")
            keyboard.add(btn1)
            bot.send_message(message.chat.id, f'''üîç  <b>–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É:</b>

üîó  <b>–°—Å—ã–ª–∫–∞ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞: </b>
 ‚Äî {link_id}
 
üí≠  <b>–ü—Ä–æ–¥–∞–∂–Ω–∏–∫:</b>
{link_text}

üîê  <b>–°–∫—Ä—ã—Ç–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ: </b>
{link_coment}

''',reply_markup=keyboard, parse_mode='HTML')

def search1(message):
        global link_id
        link_id = message.text
        msg = bot.send_message(message.chat.id, f'''üîç  <b>–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.</b>

‚ö†Ô∏è  <b>–í–ù–ò–ú–ê–ù–ò–ï!</b> –ï—Å–ª–∏ –≤—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ —Å—Å—ã–ª–∫—É —Å –Ω–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–º –¥–æ–º–µ–Ω–æ–º —Ç–æ <b>–ë–û–¢</b> –Ω–µ —Å–º–æ–∂–µ—Ç –Ω–∞–π—Ç–∏ –∑–∞–ø–∏—Å—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
        
üü¢  <b>–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–æ–º–µ–Ω—ã:</b>
 ‚Äî slivup.cc''', parse_mode='HTML')
        bot.register_next_step_handler(msg, add2)

def add1(message):
        global m1
        m1 = message.text
        msg = bot.send_message(message.chat.id, '‚ûï –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –ø–æ—Å—Ç—É.',parse_mode='HTML')
        bot.register_next_step_handler(msg, add2)

def add2(message):
        global m2
        m2 = message.text
        msg = bot.send_message(message.chat.id, '‚ûï –í–≤–µ–¥–∏—Ç–µ —Å–∫—Ä—ã—Ç–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ.',parse_mode='HTML')
        bot.register_next_step_handler(msg, add3)

def add3(message):
        global m3
        m3 = message.text
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(types.InlineKeyboardButton(text='‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ø–æ—Å—Ç',callback_data=f'–ø—Ä–∏–Ω—è—Ç—å–∑–∞—è–≤–∫—É_{message.chat.id}'))
        bot.send_message(message.chat.id, f'''–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:

‚óæ –°—Å—ã–ª–∫–∞: {m1}
‚óæ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–∫—Ä—ã—Ç–æ–≥–æ —Ç–µ–∫—Å—Ç–∞: {m3}

‚óæ –ö–æ–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:
{m2}''',parse_mode='HTML',reply_markup=keyboard)

def db_table_val(link_id: str, link_coment: str, link_text: str):
    params = (link_id, link_coment, link_text)
    cursor.execute(f'''INSERT INTO links (link_id, link_coment, link_text) VALUES ('{m1}', '{m3}', '{m2}')''')
    conn.commit()

@bot.callback_query_handler(func=lambda call:True)
def podcategors(call):
    if call.data == 'get_close':
        bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
	
    if call.data[:14] == '–ø—Ä–∏–Ω—è—Ç—å–∑–∞—è–≤–∫—É_':
        idasd = call.data[14:]
        bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
        main = telebot.types.ReplyKeyboardMarkup(True)
        bot.send_message(idasd,reply_markup=main, text='‚úÖ –£—Å–ø–µ—à–Ω–æ!')

        link_id = {m1}
        link_coment = {m3}
        link_text = {m2}
        db_table_val(link_id=link_id, link_coment=link_coment, link_text=link_text)

    if call.data == 'new_link':
        bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
        bot.send_message(call.message.chat.id, 'üì© –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤—Å–µ –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ —Å–ª–∏–≤ –ø—Ä–∏–Ω–∏–º–∞–µ–º –≤ —Ä—É—á–Ω—É—é.\n\n–û—Ç–ø—Ä–∞–≤—Ç–µ —Å–≤–æ–∏ —Å—Å—ã–ª–∫–∏ –≤ –õ–° –ø–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º –Ω–∏–∂–µ:\nüë• @sorgeny_support',parse_mode='HTML')

bot.polling()
